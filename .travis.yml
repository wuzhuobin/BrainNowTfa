stages: CI
matrix:
  include:
    - stage: CI
      name: "win10 msvc2017_64  qt5.12.5 miniconda-latest"
      language: bash
      os: windows
      services:
        - docker
      before_install:
        - wget -nv https://download.qt.io/archive/qt/5.12/5.12.5/qt-opensource-windows-x86-5.12.5.exe
        - wget -nv https://repo.anaconda.com/miniconda/Miniconda3-latest-Windows-x86_64.exe
      install:
        - pwd
        - echo "install msvc 2017 build-tools"
        - choco install -y visualstudio2017buildtools
        - echo "install qt"
        - 'echo ''
          function Controller() {
            installer.autoRejectMessageBoxes();
            installer.installationFinished.connect(function() {
              gui.clickButton(buttons.NextButton);
            });
          }
          
          Controller.prototype.WelcomePageCallback = function() {
            gui.clickButton(buttons.NextButton, 3000);
          }
          
          Controller.prototype.CredentialsPageCallback = function () {
            gui.clickButton(buttons.NextButton);
          }
          
          Controller.prototype.IntroductionPageCallback = function() {
            gui.clickButton(buttons.NextButton);
          }
          
          Controller.prototype.TargetDirectoryPageCallback = function () {
            gui.currentPageWidget().TargetDirectoryLineEdit.setText(installer.value("HomeDir") + "/Qt5.12.5");
            gui.clickButton(buttons.NextButton);
          }
          
          Controller.prototype.ComponentSelectionPageCallback = function() {
            var widget = gui.currentPageWidget();
            widget.deselectAll();
            widget.selectComponent("qt.qt5.5125.win64_msvc2017_64");
            gui.clickButton(buttons.NextButton);
          }
          
          Controller.prototype.LicenseAgreementPageCallback = function() {
            gui.currentPageWidget().AcceptLicenseRadioButton.setChecked(true);
            gui.clickButton(buttons.NextButton);
          }
          
          Controller.prototype.StartMenuDirectoryPageCallback = function() {
            gui.clickButton(buttons.NextButton);
          }
          
          Controller.prototype.ReadyForInstallationPageCallback = function() {
            gui.clickButton(buttons.NextButton);
          }
          
          Controller.prototype.FinishedPageCallback = function() {
            var checkBoxForm = gui.currentPageWidget().LaunchQtCreatorCheckBoxForm;
            if(checkBoxForm && checkBoxForm.launchQtCreatorCheckBox) {
              checkBoxForm.launchQtCreatorCheckBox.checked = false;
            }
            gui.clickButton(buttons.FinishButton);
          }
        '' > qt-installer-noninteractive.qs'
        - cat qt-installer-noninteractive.qs
        - ./qt-opensource-windows-x86-5.12.5.exe -v --script qt-installer-noninteractive.qs
        - ls ~
        - ls ~/Qt5.12.5
        - ls ~/Qt5.12.5/5.12.5
        - ls ~/Qt5.12.5/5.12.5/msvc2017_64
        - export PATH=$PATH:$HOME/Qt5.12.5/5.12.5/msvc2017_64/bin
        - qmake --version
        - echo "install miniconda"
        - 'echo '' 
          start /wait "" Miniconda3-latest-Windows-x86_64.exe /InstallationType=AllUsers /AddToPath=1 /RegisterPython=1 /S /D=%UserProfile%\Miniconda3
        '' > miniconda-installer-noniteractive.bat'
        - cat miniconda-installer-noniteractive.bat
        - ./miniconda-installer-noniteractive.bat
        - ls ~
        - ls ~/Miniconda3
        - source ~/Miniconda3/etc/profile.d/conda.sh
        - conda activate base
        - conda --version
        - python --version
        - conda create -y -n BrainNowTfa
        - conda activate BrainNowTfa
        - conda install -y pyinstaller
        - pip install src/py
      script:
        - docker --version
        - pwd
        - qmake --version
        - mkdir build && cd build
        - cmake .. -G"Visual Studio 15 2017 Win64" -DCMAKE_PREFIX_PATH=$HOME/Qt5.12.5/5.12.5/msvc2017_64/lib/cmake
        - cmake --build . --config Release
        - cd ..
        - python --version
        - conda --version
        - cd src/py
        - pyinstaller tfa.spec
        - cd ../..
      after_success:
        - pwd
        - cd build/bin/Release
        - windeployqt --release BrainNowTfa.exe
        - cp -r ../../../src/py/dist/tfa/* .
        - ls

    - stage: CI
      name: "win10 msvc2015_64  qt5.12.5 miniconda-latest"
      language: bash
      os: windows
      services:
        - docker
      before_install:
        - wget -nv https://download.qt.io/archive/qt/5.12/5.12.5/qt-opensource-windows-x86-5.12.5.exe
        - wget -nv https://repo.anaconda.com/miniconda/Miniconda3-latest-Windows-x86_64.exe
      install:
        - pwd
        - echo "install msvc 2015 build-tools"
        - choco install -y microsoft-visual-cpp-build-tools
        - echo "install qt"
        - 'echo ''
          function Controller() {
            installer.autoRejectMessageBoxes();
            installer.installationFinished.connect(function() {
              gui.clickButton(buttons.NextButton);
            });
          }
          
          Controller.prototype.WelcomePageCallback = function() {
            gui.clickButton(buttons.NextButton, 3000);
          }
          
          Controller.prototype.CredentialsPageCallback = function () {
            gui.clickButton(buttons.NextButton);
          }
          
          Controller.prototype.IntroductionPageCallback = function() {
            gui.clickButton(buttons.NextButton);
          }
          
          Controller.prototype.TargetDirectoryPageCallback = function () {
            gui.currentPageWidget().TargetDirectoryLineEdit.setText(installer.value("HomeDir") + "/Qt5.12.5");
            gui.clickButton(buttons.NextButton);
          }
          
          Controller.prototype.ComponentSelectionPageCallback = function() {
            var widget = gui.currentPageWidget();
            widget.deselectAll();
            widget.selectComponent("qt.qt5.5125.win64_msvc2015_64");
            gui.clickButton(buttons.NextButton);
          }
          
          Controller.prototype.LicenseAgreementPageCallback = function() {
            gui.currentPageWidget().AcceptLicenseRadioButton.setChecked(true);
            gui.clickButton(buttons.NextButton);
          }
          
          Controller.prototype.StartMenuDirectoryPageCallback = function() {
            gui.clickButton(buttons.NextButton);
          }
          
          Controller.prototype.ReadyForInstallationPageCallback = function() {
            gui.clickButton(buttons.NextButton);
          }
          
          Controller.prototype.FinishedPageCallback = function() {
            var checkBoxForm = gui.currentPageWidget().LaunchQtCreatorCheckBoxForm;
            if(checkBoxForm && checkBoxForm.launchQtCreatorCheckBox) {
              checkBoxForm.launchQtCreatorCheckBox.checked = false;
            }
            gui.clickButton(buttons.FinishButton);
          }
        '' > qt-installer-noninteractive.qs'
        - cat qt-installer-noninteractive.qs
        - ./qt-opensource-windows-x86-5.12.5.exe -v --script qt-installer-noninteractive.qs
        - ls ~
        - ls ~/Qt5.12.5
        - ls ~/Qt5.12.5/5.12.5
        - ls ~/Qt5.12.5/5.12.5/msvc2015_64
        - export PATH=$PATH:$HOME/Qt5.12.5/5.12.5/msvc2015_64/bin
        - qmake --version
        - echo "install miniconda"
        - 'echo '' 
          start /wait "" Miniconda3-latest-Windows-x86_64.exe /InstallationType=AllUsers /AddToPath=1 /RegisterPython=1 /S /D=%UserProfile%\Miniconda3
        '' > miniconda-installer-noniteractive.bat'
        - cat miniconda-installer-noniteractive.bat
        - ./miniconda-installer-noniteractive.bat
        - ls ~
        - ls ~/Miniconda3
        - source ~/Miniconda3/etc/profile.d/conda.sh
        - conda activate base
        - conda --version
        - python --version
        - conda create -y -n BrainNowTfa
        - conda activate BrainNowTfa
        - conda install -y pyinstaller
        - pip install src/py
      script:
        - docker --version
        - pwd
        - qmake --version
        - mkdir build && cd build
        - cmake .. -G"Visual Studio 14 2015 Win64" -DCMAKE_PREFIX_PATH=$HOME/Qt5.12.5/5.12.5/msvc2015_64/lib/cmake
        - cmake --build . --config Release
        - cd ..
        - python --version
        - conda --version
        - cd src/py
        - pyinstaller tfa.spec
        - cd ../..
      after_success:
        - pwd
        - cd build/bin/Release
        - windeployqt --release BrainNowTfa.exe
        - cp -r ../../../src/py/dist/tfa/* .
        - ls
        - cd ..
        - zip --help
        - tar --help
        - tar -cvaf Release.tar.gz Release
        - zip -r Release.zip Release
        - ls
      deploy:
        provider: releases
        token: $GITHUB_TOKEN
        file: build/bin/Release.tar.gz
        overwrite: true
        edge: true
        on: 
          branch: travis-ci
          tags: false
